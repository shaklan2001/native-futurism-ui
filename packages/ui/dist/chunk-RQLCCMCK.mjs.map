{"version":3,"sources":["../src/components/Button.tsx","../src/components/UiText.tsx","../src/components/Input.tsx","../src/components/Card.tsx","../src/components/Badge.tsx","../src/components/Avatar.tsx","../src/components/UiSwitch.tsx","../src/components/Checkbox.tsx","../src/components/UiModal.tsx"],"names":["React","RNText","styles","StyleSheet","View","Text","Pressable"],"mappings":"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","file":"chunk-RQLCCMCK.mjs","sourcesContent":["import React from 'react';\nimport { Pressable, Text, StyleSheet, PressableProps, PressableStateCallbackType, StyleProp, ViewStyle } from 'react-native';\n\nexport interface ButtonProps extends Omit<PressableProps, 'onPress'> {\n  title: string;\n  onPress: () => void;\n}\n\nexport const Button: React.FC<ButtonProps> = ({ title, onPress, style, ...rest }) => {\n  const composedStyle = (state: PressableStateCallbackType): StyleProp<ViewStyle> => {\n    const userStyle = typeof style === 'function' ? style(state) : style;\n    return [styles.button, userStyle];\n  };\n\n  return (\n    <Pressable onPress={onPress} style={composedStyle} {...rest}>\n      <Text style={styles.text}>{title}</Text>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#111827',\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '600',\n  },\n});","import React from 'react';\nimport { Text as RNText, TextProps as RNTextProps, StyleSheet } from 'react-native';\n\nexport interface UiTextProps extends RNTextProps {\n  variant?: 'title' | 'subtitle' | 'body' | 'caption';\n}\n\nexport const UiText: React.FC<UiTextProps> = ({ variant = 'body', style, children, ...rest }) => {\n  return (\n    <RNText style={[styles[variant], style]} {...rest}>\n      {children}\n    </RNText>\n  );\n};\n\nconst styles = StyleSheet.create({\n  title: { fontSize: 24, fontWeight: '700' },\n  subtitle: { fontSize: 18, fontWeight: '600', color: '#374151' },\n  body: { fontSize: 16, color: '#111827' },\n  caption: { fontSize: 12, color: '#6B7280' },\n});","import React from 'react';\nimport { TextInput, TextInputProps, StyleSheet, View } from 'react-native';\n\nexport type InputProps = TextInputProps;\n\nexport const Input: React.FC<InputProps> = ({ style, ...rest }) => {\n  return (\n    <View style={styles.container}>\n      <TextInput\n        placeholderTextColor=\"#9CA3AF\"\n        style={[styles.input, style]}\n        {...rest}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n    borderRadius: 8,\n    paddingHorizontal: 12,\n  },\n  input: {\n    height: 44,\n    fontSize: 16,\n  },\n});","import React from 'react';\nimport { View, ViewProps, StyleSheet } from 'react-native';\n\nexport interface CardProps extends ViewProps {}\n\nexport const Card: React.FC<CardProps> = ({ style, children, ...rest }) => {\n  return (\n    <View style={[styles.card, style]} {...rest}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 12,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOpacity: 0.05,\n    shadowRadius: 10,\n    shadowOffset: { width: 0, height: 4 },\n    elevation: 2,\n  },\n});","import React from 'react';\nimport { View, Text, StyleSheet, ViewProps } from 'react-native';\n\nexport interface BadgeProps extends ViewProps {\n  label: string;\n  color?: string;\n  backgroundColor?: string;\n}\n\nexport const Badge: React.FC<BadgeProps> = ({ label, color = '#111827', backgroundColor = '#E5E7EB', style, ...rest }) => {\n  return (\n    <View style={[styles.badge, { backgroundColor }, style]} {...rest}>\n      <Text style={[styles.text, { color }]}>{label}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  badge: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderRadius: 999,\n    alignSelf: 'flex-start',\n  },\n  text: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n});","import React from 'react';\nimport { View, Text, StyleSheet, ViewProps } from 'react-native';\n\nexport interface AvatarProps extends ViewProps {\n  label: string; // initials\n  size?: number;\n}\n\nexport const Avatar: React.FC<AvatarProps> = ({ label, size = 48, style, ...rest }) => {\n  return (\n    <View style={[styles.container, { width: size, height: size, borderRadius: size / 2 }, style]} {...rest}>\n      <Text style={styles.label}>{label}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#E5E7EB',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    fontWeight: '700',\n    color: '#111827',\n  },\n});","import React from 'react';\nimport { Switch, SwitchProps } from 'react-native';\n\nexport type UiSwitchProps = SwitchProps;\n\nexport const UiSwitch: React.FC<UiSwitchProps> = (props) => {\n  return <Switch {...props} />;\n};","import React from 'react';\nimport { Pressable, View, StyleSheet } from 'react-native';\n\nexport interface CheckboxProps {\n  checked: boolean;\n  onChange: (next: boolean) => void;\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({ checked, onChange }) => {\n  return (\n    <Pressable onPress={() => onChange(!checked)}>\n      <View style={[styles.box, checked && styles.boxChecked]} />\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  box: {\n    width: 22,\n    height: 22,\n    borderWidth: 2,\n    borderColor: '#111827',\n    borderRadius: 6,\n  },\n  boxChecked: {\n    backgroundColor: '#111827',\n  },\n});","import React from 'react';\nimport { Modal, ModalProps, View, StyleSheet } from 'react-native';\n\nexport interface UiModalProps extends ModalProps {}\n\nexport const UiModal: React.FC<UiModalProps> = ({ children, ...rest }) => {\n  return (\n    <Modal transparent animationType=\"slide\" {...rest}>\n      <View style={styles.backdrop}>\n        <View style={styles.content}>{children}</View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.4)',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  content: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    minWidth: '80%',\n    overflow: 'hidden',\n  },\n});"]}